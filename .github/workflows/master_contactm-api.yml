
# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - contactmanagementapi

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Verifying code repository
      - uses: actions/checkout@v4

      - name: Check all environment variables
        run: printenv
  
      # Listing directory structure
      - name: List directory structure
        run: |
          pwd  # Mostra o diretório atual
          ls -R  # Lista todos os arquivos e subdiretórios recursivamente
          
      #  Checking current directory   
      - name: Check current directory
        run: |
          pwd
          
      # 2. Setting .Net SDK
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
         
          
      # 4. Restoring dependencies
      - name: Restore dependencies
        run: dotnet restore ContactManagement/ContactManagement.sln

      # 4. Conpiling Solution
      - name: Build solution
        run: dotnet build ContactManagement/ContactManagement.sln  --no-restore --configuration Release

      # 5. Running tests
      - name: Run tests
        run: dotnet test ContactManagement/ContactManagement.sln --no-build --configuration Release --logger "trx;LogFileName=test_results.trx"
        continue-on-error: false        

      #- name: Build with dotnet
        #run: dotnet build --configuration Release
      # 6. Creating publish

      - name: dotnet publish
        #run: dotnet publish ContactManagement/ContactManagement.sln -c Release -o ${{env.DOTNET_ROOT}}/myapp
        #run: dotnet publish ContactManagement/ContactManagement.sln -c Release -o ${{github.workspace}}/out
        run: dotnet publish ContactManagement/ContactManagement.Api/ContactManagement.Api.csproj -c Release -o /home/runner/work/ContactManagementAPI-CICD/ContactManagementAPI-CICD/out

      - name: Verify output
        run: |
          ls -la /home/runner/work/ContactManagementAPI-CICD/ContactManagementAPI-CICD/out
          if [ -z "$(ls -A /home/runner/work/ContactManagementAPI-CICD/ContactManagementAPI-CICD/out)" ]; then
            echo "Output folder is empty!"
            exit 1
          fi        
      # 7. Uploading artifact
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{github.workspace}}/out


  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_8B70F420EF8E4AD3A551D9E77F76D65D }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_7AF48A8D670948F492C1389A5DC38344 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_BE7AA001B0AC43F4BDABFB8598ACEB59 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'contactm-api'
          slot-name: 'Production'
          package: .
          
